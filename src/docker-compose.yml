services:
  # --> FRONTEND SERVICE <-- #
  frontend:
    container_name: frontend
    build:
      context: ./requirements/frontend
      dockerfile: Dockerfile
    volumes:
      - ./requirements/frontend/static:/var/www/static
      - ./requirements/frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3000:80"
    networks:
      - transcendence-network
  # --> ACCOUNT SERVICE <-- #
  ft_transcendence:
    container_name: transcendence
    env_file: ./requirements/django/ft_transcendence/.env
    restart: always
    build:
      context: ./requirements/django
      dockerfile: Dockerfile
    command: >
      sh -c "
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./requirements/django/ft_transcendence:/ft_transcendence
    ports:
      - "8000:8000"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - transcendence-network
  # --> AUTH SERVICE <-- #
  auth:
    container_name: auth
    env_file: ./requirements/django/auth_service/.env
    restart: always
    build:
      context: ./requirements/django/auth_service
      dockerfile: Dockerfile
    command: >
      sh -c "
      python3 manage.py makemigrations &&
      python3 manage.py migrate &&
      python3 manage.py runserver 0.0.0.0:8001"
    volumes:
      - ./requirements/django/auth_service:/app
    ports:
      - "8001:8000"
    depends_on:
      auth_db:
        condition: service_healthy
    networks:
      - transcendence-network
  # --> DATABASE AUTH <-- #
  auth_db:
    container_name: auth_db
    image: postgres
    restart: always
    env_file: ./requirements/django/auth_service/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    shm_size: 128mb
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    networks:
      - transcendence-network
    ports: 
     - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  # --> DATABASE ACCOUNT <-- #
  postgresdb:
    container_name: postgresdb  
    image: postgres
    restart: always
    env_file: ./requirements/django/ft_transcendence/.env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    shm_size: 128mb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - transcendence-network
    ports: 
     - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
    name: account_data
  auth_pgdata:
    name: auth_data

networks:
  transcendence-network:
    name: transcendence-network
    driver: bridge
