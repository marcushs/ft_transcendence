server {
    listen 80;
    server_name localhost;

    # Define the root directory for static files
    root /var/www/static;

    # Configure access to static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Disable caching
    expires -1;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    autoindex on;  # For debugging, not recommended for production

  # Specific route handling for /twofactor/
    # Handle URLs starting with /twofactor/ by rewriting them
    location ~ ^/twofactor(/.*) {
        rewrite ^/twofactor(/.*)$ $1 last;
    }
    
    location ~ ^/users(/.*) {
        rewrite ^/users(/.*)$ $1 last;
    }
    # Serve JavaScript files
    location ~* \.(js)$ {
        root /var/www/static;
        add_header Content-Type application/javascript;
    }

    location ~ ^/friends/update_contacts/ { # endpoint for real-time update status user (user_service caller only)
        allow 172.18.0.0/16;  # docker network IP
        deny all;  # Block other request
    }

    location ~ ^/game/start_game/ { # endpoint for start new instance of game (matchmaking_service caller only)
        allow 172.18.0.0/16;  # docker network IP
        deny all;  # Block other request
    }

    location ~ ^/game/get_games_instance/ { # endpoint for send game instance list (matchmaking_service caller only)
        allow 172.18.0.0/16;  # docker network IP
        deny all;  # Block other request
    }

    location ~ ^/matchmaking/matchmaking_result/ { # endpoint for send game result (game_service caller only)
        allow 172.18.0.0/16;  # docker network IP
        deny all;  # Block other request
    }

    location ~ ^/user/user_game_info/ { # endpoint for get user info for game_service
        allow 172.18.0.0/16;  # docker network IP
        deny all;  # Block other request
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}