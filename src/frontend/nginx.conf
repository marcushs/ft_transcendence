server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    ssl_protocols TLSv1.3;
    server_name localhost;

    ssl_certificate     /etc/nginx/ssl/hleung_42_fr.crt;
    ssl_certificate_key /etc/nginx/ssl/hleung_42_fr.key;

    # Define the root directory for static files
    root /var/www/static;

    # Configure access to static files
    location / {
        try_files $uri $uri/ /index.html;
    }

    set_real_ip_from 172.18.0.0/16;
    real_ip_header X-Forwarded-For;

    # Disable caching
    expires -1;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
    autoindex on;  # For debugging, not recommended for production

  # Specific route handling for /2fa/
    # Handle URLs starting with /2fa by rewriting them
    location ~ ^/2fa(/.*) {
        rewrite ^/2fa(/.*)$ $1 last;
    }
    
    location ~ ^/users(/.*) {
        rewrite ^/users(/.*)$ $1 last;
    }

    # Serve JavaScript files
    location ~* \.(js)$ {
        root /var/www/static;
        add_header Content-Type application/javascript;
    }

    # ---------------------->  Internal API Protection <---------------------

    # endpoint for real-time update status user (user_service caller only)
    location /api/friends/update_contacts/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for start new instance of game (matchmaking_service caller only)
    location /api/game/start_game/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for send game instance list (matchmaking_service caller only)
    location /api/game/get_games_instance/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for change game status in matchmaking (game_service caller only)
    location /api/matchmaking/change_game_status/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for get user info for game_service
    location /api/user/user_game_info/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for get a matchable pair of user for ranked (matchmaking_service caller only)
    location /api/statistics/get_ranked_pair/ { 
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for get preview of stats after game end (matchmaking_service caller only)
    location /api/statistics/get_preview_result/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # endpoint for update history and statistic after game end (game_service caller only)
    location /api/statistics/match_result/ {
        allow 172.18.0.0/16;
        deny all;
    }

    # ---------------------->  endpoint reverse proxy setup <---------------------

    location /api/auth/ {
        proxy_pass http://auth:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/user/ {
        proxy_pass http://user:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/chat/ {
        proxy_pass http://chat:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/twofactor/ {
        proxy_pass http://twofactor:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/oauth42/ {
        proxy_pass http://oauth42:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/oauthgithub/ {
        proxy_pass http://oauthgithub:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/oauthgoogle/ {
        proxy_pass http://oauthgoogle:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/friends/ {
        proxy_pass http://friends:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/notifications/ {
        proxy_pass http://notifications:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/matchmaking/ {
        proxy_pass http://matchmaking:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /api/game/ {
        proxy_pass http://game:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/statistics/ {
        proxy_pass http://statistics:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/tournament/ {
        proxy_pass http://tournament:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # ---------------------->  Websocket wss reverse proxy setup <---------------------

    location ~ ^/ws/chat/ {
        proxy_pass http://chat:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    location ~ ^/ws/contacts/ {
        proxy_pass http://friends:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    location ~ ^/ws/notifications/ {
        proxy_pass http://notifications:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    location ~ ^/ws/matchmaking/ {
        proxy_pass http://matchmaking:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }


    location ~ ^/ws/game/ {
        proxy_pass http://game:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    location ~ ^/ws/tournament/ {
        proxy_pass http://tournament:8000;   # Forward WebSocket requests to Django
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;  # Pass the real client's IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie;
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}